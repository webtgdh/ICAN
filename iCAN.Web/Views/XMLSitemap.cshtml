@using Umbraco.Web
@inherits UmbracoViewPage<IPublishedContent>

<?xml version="1.0" encoding="UTF-8" ?>
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9"
        xmlns:image="http://www.google.com/schemas/sitemap-image/1.1"
        xmlns:video="http://www.google.com/schemas/sitemap-video/1.1">

    @ListChildNodes(Model.AncestorOrSelf(1))
</urlset>

@helper ListChildNodes(IPublishedContent startNode) {
    Response.ContentType = "text/xml";
    const int maxLevelForSiteMap = 100;
    foreach(var node in startNode.Children
        .Where(n =>
            n.IsVisible() &&
            n.TemplateId > 0 &&
            !Umbraco.IsProtected(n.Id, n.Path) &&
            n.DocumentTypeAlias != "notFound" &&
            (!n.HasProperty("umbracoNaviHide") || !n.GetPropertyValue<bool>("umbracoNaviHide")) &&
            (!n.HasProperty("umbracoSitemapHide") || !n.GetPropertyValue<bool>("umbracoSitemapHide")))
        .Select(n => n.AsDynamic())) {
    <url>
        <loc>@(((IPublishedContent)node).UrlWithDomain())</loc>
        <lastmod>@node.UpdateDate.ToString("s")+00:00</lastmod>
    </url>
        if (node.Level <= maxLevelForSiteMap) {
            @ListChildNodes(node)
        }
    }
}