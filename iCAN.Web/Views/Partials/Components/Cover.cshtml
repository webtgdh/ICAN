@using TGDH.Core.Models;
@inherits UmbracoViewPage<CoverViewModel>
@{
    if (Model.Image == null)
    {
        return;
    }
}
<section class="c-cover u-clearfix @Model.ModifierClass">
	@RenderImage(Model.Image)
	<div class="c-cover__content o-wrap">
		<div class="c-cover__copy">
            @if(!String.IsNullOrWhiteSpace(Model.Headline)) {
                <h1 class="c-cover__headline">@Model.Headline</h1>
            }
            @if(Model.Copy != null) {
                <div class="c-cover__copy">
                    @Model.Copy
                </div>
            }
			@RenderCTA(Model.Cta)
		</div>
	</div>
</section>

@helper RenderCTA(string ctaJson)
{
	var cta = new LinkPickerModel(ctaJson);

	if(!String.IsNullOrWhiteSpace(cta.Url) || !string.IsNullOrWhiteSpace(cta.Hashtarget))
	{
		var ctaLink = cta.Url + cta.Hashtarget;
        var ctaText = !String.IsNullOrWhiteSpace(cta.Name) ? cta.Name : "Find out more";
		<a href="@ctaLink" title="@cta.Name" target="@cta.Target" class="c-button c-button--primary u-space-top--large">@cta.Name</a>
	}
}

@helper RenderImage(IPublishedContent image) {
	var altText = image.GetPropertyValue<string>("altText");

	string smallImageUrl = Url.GetCropUrl(
		image,
		cropAlias: "1:1",
		width: 800,
		htmlEncode: false
	).ToString();

	string mediumImageUrl = Url.GetCropUrl(
		image,
		cropAlias: "16:9",
		width: 800,
		htmlEncode: false
	).ToString();

	string largeImageUrl = Url.GetCropUrl(image,
		cropAlias: "16:9",
		width: 600,
		htmlEncode: false
	).ToString();

	string xLargeImageUrl = Url.GetCropUrl(
		image,
		cropAlias: "16:9",
		width: 700,
		htmlEncode: false
	).ToString();

	string xxLargeImageUrl = Url.GetCropUrl(image,
		cropAlias: "16:9",
		width: 900,
		htmlEncode: false
	).ToString();

	string xxxLargeImageUrl = Url.GetCropUrl(
		image,
		cropAlias: "16:9",
		width: 1200,
		htmlEncode: false
	).ToString();

    <picture class="c-cover__image-wrap">
        <!--[if IE 9]><video style="display: none;"><![endif]-->
        <source srcset="@xxxLargeImageUrl" data-srcset="@xxxLargeImageUrl" media="(min-width: 1800px)">
        <source srcset="@xxLargeImageUrl" data-srcset="@xxLargeImageUrl" media="(min-width: 1500px)">
        <source srcset="@xLargeImageUrl" data-srcset="@xLargeImageUrl" media="(min-width: 1280px)">
        <source srcset="@largeImageUrl" data-srcset="@largeImageUrl" media="(min-width: 800px)">
        <source srcset="@mediumImageUrl" data-srcset="@mediumImageUrl" media="(min-width: 600px)">
        <source srcset="@smallImageUrl" data-srcset="@smallImageUrl" media="(max-width: 599px)">
        <!--[if IE 9]></video><![endif]-->
        <img src="@xLargeImageUrl&quality=18" data-src="@xLargeImageUrl" alt="@altText" class="c-cover__image js-lazyload" alt="@altText">
    </picture>
}