@using iCAN.Core.Models;
@inherits UmbracoViewPage<CoverViewModel>
@{
    if (Model.Image == null)
    {
        return;
    }

	var hasLink = !String.IsNullOrWhiteSpace(Model.Url);
}
<section class="c-cover @Model.ModifierClass">
	@RenderImage(Model.Image)
	<div class="c-cover__inner o-wrap o-wrap--x-large">
		<div class="c-cover__content">
			@if (!String.IsNullOrWhiteSpace(Model.Headline)) {
				switch(Model.HeadingLevel) {
					case "h1":
						<h1 class="c-cover__headline u-giga" itemprop="headline">@Model.Headline</h1>
						break;
					case "h3":
						<h3 class="c-cover__headline u-giga" itemprop="headline">@Model.Headline</h3>
						break;
					default:
						<h2 class="c-cover__headline u-giga" itemprop="headline">@Model.Headline</h2>
						break;
				}
			}
			@if(!String.IsNullOrWhiteSpace(Model.Copy)) {
				<div class="c-cover__copy u-epsilon">
					@Html.Raw(Model.Copy)
				</div>
			}
			@if (hasLink) {
				<a href="@Model.Url" class="c-cover__cta c-button c-button--primary u-space-top" target="@Model.Target">@Model.CtaName</a>
			}
		</div>
	</div>
</section>

@helper RenderImage(IPublishedContent image) {
	var altText = image.GetPropertyValue<string>("altText");

	string smallImageUrl = Url.GetCropUrl(
		image,
		cropAlias: "3:4",
		width: 800,
		htmlEncode: false
	).ToString();

	string mediumImageUrl = Url.GetCropUrl(
		image,
		cropAlias: "1:1",
		width: 1200,
		htmlEncode: false
	).ToString();

	string largeImageUrl = Url.GetCropUrl(image,
		cropAlias: "16:9",
		width: 1400,
		htmlEncode: false
	).ToString();

	string xLargeImageUrl = Url.GetCropUrl(
		image,
		cropAlias: "16:9",
		width: 1600,
		htmlEncode: false
	).ToString();

	string xxLargeImageUrl = Url.GetCropUrl(image,
		cropAlias: "16:9",
		width: 1800,
		htmlEncode: false
	).ToString();

	string xxxLargeImageUrl = Url.GetCropUrl(
		image,
		cropAlias: "21:9",
		width: 2200,
		htmlEncode: false
	).ToString();

    <picture class="c-cover__image-wrap">
        <!--[if IE 9]><video style="display: none;"><![endif]-->
        <source srcset="@xxxLargeImageUrl" data-srcset="@xxxLargeImageUrl" media="(min-width: 1800px)">
        <source srcset="@xxLargeImageUrl" data-srcset="@xxLargeImageUrl" media="(min-width: 1500px)">
        <source srcset="@xLargeImageUrl" data-srcset="@xLargeImageUrl" media="(min-width: 1280px)">
        <source srcset="@largeImageUrl" data-srcset="@largeImageUrl" media="(min-width: 800px)">
        <source srcset="@mediumImageUrl" data-srcset="@mediumImageUrl" media="(min-width: 600px)">
        <source srcset="@smallImageUrl" data-srcset="@smallImageUrl" media="(max-width: 599px)">
        <!--[if IE 9]></video><![endif]-->
        <img src="@largeImageUrl&quality=18" data-src="@xLargeImageUrl" alt="@altText" class="c-cover__image js-lazyload" alt="@altText">
    </picture>
}
