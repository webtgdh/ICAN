@using TGDH;
@using TGDH.Core.Models;
@using TGDH.Core.Utility;
@inherits UmbracoViewPage<IPublishedContent>
@{
    var query = Request.QueryString["q"];

    if (query.IsNullOrWhiteSpace()) {
        return;
    }

    var results = Umbraco.TypedSearch(query).ToList().Where(x => x.IsVisible() && x.TemplateId > 0 && !x.GetPropertyValue<bool>("hideFromSearch")).ToList();
  
    var paging = new Paging(results.Count(), 5);
    var selection = results.Skip(paging.Skip).Take(paging.Take);
}

<section class="m-search-results">
    @if (results.Any()) {
        <small>@results.Count() results for <strong>@query</strong></small>

        foreach (var item in selection) {
            @Html.Partial("Components/Card", new CardViewModel {
                Headline = item.GetPropertyValue<string>("headline", item.Name),
                Url = item.Url,
                Image = item.GetPropertyValue<IPublishedContent>("featuredImage")
            })
        }

        @Html.Partial("Components/Pagination", new PaginationViewModel {
            Paging = paging,
            CurrentModel = Model
        })
    } else {
        <p>Sorry, we couldn't find anything for <strong>@query</strong></p>
    }
</section>