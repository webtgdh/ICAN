@using TGDH.Forms.Models
@inherits UmbracoViewPage<ContactForm>
@{
    var success = TempData["ContactFormValidationPasses"] != null;
    var error = TempData["ContactFormValidationFailed"] != null;
    var folderId = TempData["ContactFormFormFolderId"];
}

@if (success)
{
    if (folderId != null)
    {
        var folder = Umbraco.TypedContent(folderId);
        var message = folder.GetPropertyValue<string>("submitMessage");

        @message
    }
}
else
{
    if (error)
    {
        @Html.ValidationSummary()
    }

    using (Html.BeginUmbracoForm("ProcessFormSubmission", "ContactForm", FormMethod.Post, new { id = "contact-form", @class = "c-form js-form" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(x => x.PageName)
        <fieldset class="o-form__fieldset">
            <legend class="o-legend u-hide-text">Contact form</legend>
             <div class="o-form__field o-form__field--compact is-required">
                @Html.TextBoxFor(x => x.SenderName, new {required = "required", @class = "o-input"})
                @Html.LabelFor(x => x.SenderName, new {@class = "o-label"})
                @Html.ValidationMessageFor(x => x.SenderName)
            </div>
            <div class="o-form__field o-form__field--compact is-required">
                @Html.TextBoxFor(x => x.Email, new { required = "required", @class = "o-input" })
                @Html.LabelFor(x => x.Email, new { @class = "o-label" })
                @Html.ValidationMessageFor(x => x.Email)
            </div>
            <div class="o-form__field o-form__field--compact is-required">
                @Html.TextAreaFor(x => x.Message, new { required = (string)null, @class = "o-input", rows = 6 })
                @Html.LabelFor(x => x.Message, new { @class = "o-label" })
                @Html.ValidationMessageFor(x => x.Message)
            </div>
            <div class="o-form__field o-form__field--submit">
                <button type="submit" class="c-button c-button--primary">Send form</button>
            </div>
        </fieldset>
    }
}
