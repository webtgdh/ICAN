@using iCAN.Core.Data;
@using iCAN.Core.Utility;
@using iCAN.Core.Models;
@inherits UmbracoViewPage<IPublishedContent>
@{
    Layout = "Master.cshtml";
	var headline = Model.GetPropertyValue<string>("headline", Model.Name);

    var qCat = Request.QueryString["category"];
    var qMonth = Request.QueryString["month"];
    var qYear = Request.QueryString["year"];

    var allArticles = News.AllArticles(Umbraco).ToList().Where(x => x.IsVisible()).ToList();
    var filteredArticles = News.FilterSelection(allArticles, qCat, qMonth, qYear).ToList();

    var paging = new Paging(filteredArticles.Count(), 5);
    var selection = filteredArticles.Skip(paging.Skip).Take(paging.Take).ToList();
}

<div class="o-page__inner">
	<div class="o-section o-page__content--has-sidebar o-wrap o-wrap--x-large">
		@Html.Partial("~/Views/Partials/Components/HeadingFeature.cshtml", new HeadingViewModel {
			Headline = headline,
			Subtitle = Model.GetPropertyValue<string>("subheadline"),
		})
		<div class="u-clearfix">
			<main class="o-page__content__main u-clearfix" role="main">
				@if (selection.Any()) {
					<div class="c-listing-card u-clearfix">
						@foreach (var item in selection) {
							var isInTheMedia = item.DocumentTypeAlias == "inTheMedia";

							@Html.Partial("Components/Card", new CardViewModel {
								Image = item.GetPropertyValue<IPublishedContent>("featuredImage"),
								Headline = item.GetPropertyValue<string>("headline", item.Name),
								Category = ContentTypeHelper.GetNewsTypeLabelFromPage(item.DocumentTypeAlias),
								Label = item.GetPropertyValue<DateTime>("releaseDate").ToString("dd / MM / yyyy"),
								Copy = item.GetPropertyValue<string>("pageDescription"),
								Url = isInTheMedia ? item.GetPropertyValue<string>("source") : item.Url,
								Target = isInTheMedia ? "_blank" : "",
								ModifierClass = "c-listing-card__item"
							})
						}
					</div>

					@Html.Partial("Components/Pagination", new PaginationViewModel {
						Paging = paging,
						CurrentModel = Model
					})
				} else {
					@Model.GetPropertyValue("noResultsMessage")
				}
			</main>
			<aside class="o-page__content__sidebar">
				@{
					var pageUrl = Model.Url;
					var dateLinks = Filters.GetDatesFromSelection(allArticles, pageUrl, qMonth, qYear);
					var categoryLinks = News.GetCategoryLinks(allArticles, pageUrl, qCat);
				}

				@if (categoryLinks != null) {
					<h2>Categories</h2>
					@Html.Partial("Components/LinkList", new LinkListViewModel(categoryLinks))
				}
				@if (dateLinks != null) {
					<h2>Archive</h2>
					@Html.Partial("Components/LinkList", new LinkListViewModel(dateLinks))
				}
			</aside>
		</div>
	</div>
</div>
